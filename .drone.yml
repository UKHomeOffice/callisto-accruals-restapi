---
kind: pipeline
type: kubernetes
name: lint-files

platform:
  os: linux
  arch: amd64

trigger:
  event:
    exclude:
      - promote

steps:
  - name: lint_dockerfile
    pull: if-not-exists
    image: hadolint/hadolint:latest-alpine
    commands:
      - hadolint Dockerfile

---
kind: pipeline
type: kubernetes
name: promotion-check

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - promote

steps:
  - name: branch-check
    pull: if-not-exists
    image: alpine:latest
    commands:
      - echo Cannot promote from non 'main' branch
      - exit 1
    when:
      branch:
        exclude:
          - main

  - name: environment-check
    pull: if-not-exists
    image: alpine:latest
    commands:
      - echo Cannot promote to a non prod environment
      - exit 1
    when:
      target:
        exclude:
          - production

  - name: build-check
    pull: if-not-exists
    image: drone/cli:1.6.2-alpine
    environment:
      DRONE_BUILD_PARENT: ${DRONE_BUILD_PARENT}
      DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
      DRONE_TOKEN:
        from_secret: drone_token
    commands:
      - chmod +x ./bin/pipeline-scripts/check-build-promotion.sh
      - ./bin/pipeline-scripts/check-build-promotion.sh

---
kind: pipeline
type: kubernetes
name: build-service

platform:
  os: linux
  arch: amd64

depends_on:
  - lint-files

trigger:
  event:
    exclude:
      - promote

accruals_quay_settings: &accruals_quay_settings
  pull: if-not-exists
  image: plugins/docker
  settings:
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/callisto-accruals-restapi
    username:
      from_secret: quay_robot_name
    password:
      from_secret: quay_robot_token
    file: Dockerfile

steps:
  - name: fetch
    image: alpine/git
    commands:
      - "git fetch origin +refs/heads/main:"

  - name: build
    image: maven:3.8.3-openjdk-17
    depends_on:
      - fetch
    environment:
      DOCKER_HOST: tcp://127.0.0.1:2375
      TESTCONTAINERS_RYUK_DISABLED: true
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done; if [ ! docker stats --no-stream ]; then exit 1; fi
      - mvn -s ./accruals_settings.xml clean verify

  - name: sonar
    image: maven:3.8.3-openjdk-17
    depends_on:
      - build
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
      SONAR_HOST:
        from_secret: sonar_cloud_host
      SONAR_TOKEN:
        from_secret: sonar_cloud_token
    commands:
      - mvn -s ./accruals_settings.xml sonar:sonar
        -Dsonar.host.url=$${SONAR_HOST}
        -Dsonar.login=$${SONAR_TOKEN}
        -Dsonar.organization=ukhomeoffice
        -Dsonar.projectKey=callisto-accruals-restapi
        -Dsonar.branch.name=$DRONE_BRANCH
        -Dsonar.projectName=callisto-accruals-restapi -Dsonar.qualitygate.wait=true
        -Dsonar.exclusions=src/main/java/uk/gov/homeoffice/digital/sas/accruals/CallistoAccrualsRestapiApplication.java
    when:
      event:
        exclude:
          - pull_request

  - name: build_tag_push_quay_branch
    <<: *accruals_quay_settings
    depends_on:
      - build
    settings:
      tags:
        - ${DRONE_COMMIT_SHA}
        - ${DRONE_SOURCE_BRANCH%%/*}
    when:
      event:
        - pull_request

  - name: build_tag_push_quay
    <<: *accruals_quay_settings
    depends_on:
      - sonar
    settings:
      tags:
        - latest
        - ${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

---
kind: pipeline
type: kubernetes
name: build-database-schema

platform:
  os: linux
  arch: amd64

depends_on:
  - lint-files

trigger:
  event:
    exclude:
      - promote

database_quay_settings: &database_quay_settings
  pull: if-not-exists
  image: plugins/docker
  settings:
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/callisto-accruals-database
    username:
      from_secret: quay_robot_name
    password:
      from_secret: quay_robot_token
    dockerfile: db/Dockerfile
    context: db

steps:
  - name: build_tag_push_quay_branch
    <<: *database_quay_settings
    settings:
      tags:
        - ${DRONE_COMMIT_SHA}
        - ${DRONE_SOURCE_BRANCH%%/*}
    when:
      event: pull_request

  - name: build_tag_push_quay
    <<: *database_quay_settings
    settings:
      tags:
        - latest
        - ${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

---
kind: pipeline
type: kubernetes
name: callisto-accruals-restapi-branch-deploy

platform:
  os: linux
  arch: amd64

depends_on:
  - build-service
  - build-database-schema

trigger:
  event:
    - pull_request

steps:
  - name: branch_deploy
    image: pelotech/drone-helm3
    settings:
      namespace: callisto-dev
      mode: upgrade
      add_repos: helm_repo=https://ukhomeoffice.github.io/callisto-helm-charts/
      chart: helm_repo/callisto-base-service
      chart_version: 1.0.2
      values:
        - mainContainerImage.tag=${DRONE_COMMIT_SHA}
        - databaseMigrationImage.tag=${DRONE_COMMIT_SHA}
        - ingress.branch=${DRONE_SOURCE_BRANCH%%/*}
      values_files:
        - ./helm/values/dev-values.yaml
      release: callisto-accruals-restapi-${DRONE_SOURCE_BRANCH%%/*}
      kube_certificate:
        from_secret: notprod_kube_api_certificate
      kube_api_server:
          from_secret: notprod_kube_api_url
      kube_token:
        from_secret: dev_kube_token

---
kind: pipeline
type: kubernetes
name: dev-deploy

platform:
  os: linux
  arch: amd64

depends_on:
  - build-service
  - build-database-schema

trigger:
  event:
    include:
      - push
    exclude:
      - promote
  branch:
    - main

steps:
  - name: deploy_to_dev
    image: pelotech/drone-helm3
    settings:
      namespace: callisto-dev
      mode: upgrade
      add_repos: helm_repo=https://ukhomeoffice.github.io/callisto-helm-charts/
      chart: helm_repo/callisto-base-service
      chart_version: 1.0.2
      values:
        - mainContainerImage.tag=${DRONE_COMMIT_SHA}
        - databaseMigrationImage.tag=${DRONE_COMMIT_SHA}
      values_files:
        - ./helm/values/dev-values.yaml
      release: callisto-accruals-restapi
      kube_certificate:
        from_secret: notprod_kube_api_certificate
      kube_api_server:
        from_secret: notprod_kube_api_url
      kube_token:
        from_secret: dev_kube_token

---
kind: pipeline
type: kubernetes
name: test-deploy

platform:
  os: linux
  arch: amd64

depends_on:
  - dev-deploy

trigger:
  event:
    include:
      - push
    exclude:
      - promote
  branch:
    - main

steps:
  - name: deploy_to_test
    image: pelotech/drone-helm3
    settings:
      namespace: callisto-test
      mode: upgrade
      add_repos: helm_repo=https://ukhomeoffice.github.io/callisto-helm-charts/
      chart: helm_repo/callisto-base-service
      chart_version: 1.0.2
      values:
        - mainContainerImage.tag=${DRONE_COMMIT_SHA}
        - databaseMigrationImage.tag=${DRONE_COMMIT_SHA}
      values_files:
        - ./helm/values/test-values.yaml
      release: callisto-accruals-restapi
      kube_certificate:
        from_secret: notprod_kube_api_certificate
      kube_api_server:
        from_secret: notprod_kube_api_url
      kube_token:
        from_secret: test_kube_token

---
kind: pipeline
type: kubernetes
name: prod-deploy

platform:
  os: linux
  arch: amd64

depends_on:
  - promotion-check

trigger:
  event:
    - promote
  target:
    exclude:
    - production
#To reinstate prod deployment change to trigger to:
#trigger:
#  event:
#    - promote
#  target:
#      - production

steps:
  - name: deploy_to_prod
    image: pelotech/drone-helm3
    settings:
      namespace: callisto-prod
      mode: upgrade
      add_repos: helm_repo=https://ukhomeoffice.github.io/callisto-helm-charts/
      chart: helm_repo/callisto-base-service
      chart_version: 1.0.2
      values:
        - mainContainerImage.tag=${DRONE_COMMIT_SHA}
        - databaseMigrationImage.tag=${DRONE_COMMIT_SHA}
      values_files:
        - ./helm/values/prod-values.yaml
      release: callisto-accruals-restapi
      kube_certificate:
        from_secret: prod_kube_api_certificate
      kube_api_server:
        from_secret: prod_kube_api_url
      kube_token:
        from_secret: prod_kube_token

---
kind: pipeline
type: kubernetes
name: build notifications

trigger:
  status:
    - success
    - failure
  event:
    exclude:
      - pull_request

depends_on:
  - build-service
  - dev-deploy
  - test-deploy
  - prod-deploy

slack: &slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook_url
    channel: callisto-tech-notifications
    username: Drone

steps:
  - name: slack
    <<: *slack
    settings:
      template: |
        {{#success build.status}}
          <${DRONE_BUILD_LINK}|Build #{{build.number}}> succeeded! :tada:
        {{else}}
          <${DRONE_BUILD_LINK}|Build #{{build.number}}> failed :broken_heart:
        {{/success}}
        Commit: <${DRONE_REPO_LINK}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}> - {{{ trim build.message }}}
        Repo: {{ repo.name }}
        Branch: <${DRONE_REPO_LINK}/commits/{{ build.branch }}|{{ build.branch }}>
        Author: {{ build.author }}
        <https://sonarcloud.io/dashboard?id=callisto-ui&branch={{ build.branch }}&resolved=false|SonarCloud Analysis Report>

  - name: slack_promotion
    <<: *slack
    settings:
      template: >
        {{#success build.status}}
          :rocket: Successful *{{build.deployTo}}* deployment for *{{repo.name}}* <${DRONE_BUILD_LINK}| build #{{build.number}}>.
        {{else}}
          :zombie: Problem *{{build.deployTo}}* deployment failed for *{{repo.name}}* <${DRONE_BUILD_LINK}| build #{{build.number}}>.
        {{/success}}
    when:
      event:
        - promote

---
kind: pipeline
type: kubernetes
name: urgent notifications

trigger:
  status:
    - failure
  event:
    exclude:
      - pull_request

depends_on:
  - build-service
  - dev-deploy
  - test-deploy
  - prod-deploy

slack: &slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_urgent_webhook_url
    channel: callisto-urgent-tech-notifications
    username: Drone

steps:
  - name: slack_build_urgent
    <<: *slack
    settings:
      template: |
        <${DRONE_BUILD_LINK}|Build #{{build.number}}> failed :this-is-fine-fire:
        Commit: <${DRONE_REPO_LINK}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}> - {{{ trim build.message }}}
        Repo: {{ repo.name }}
        Author: {{ build.author }}
    when:
      branch:
        - main

  - name: slack_promote_urgent
    <<: *slack
    settings:
      template: |
        :alert: Problem *{{build.deployTo}}* deployment failed for *{{repo.name}}* <${DRONE_BUILD_LINK}| build #{{build.number}}>.
    when:
      event:
        - promote